{"version":3,"sources":["controllers/auth.ts"],"names":[],"mappings":"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","file":"../../src/controllers/auth.js","sourcesContent":["import * as passport        from 'passport';\nimport { BasicStrategy }    from 'passport-http';\nimport * as  Bearer from 'passport-http-bearer';\nvar BearerStrategy = Bearer.Strategy;\n\n\nimport { User }     from '../models/user';\nimport { Client }   from '../models/client';\nimport { Token }    from '../models/token';\n\n\npassport.use(new BasicStrategy(\n    (username, password, callback) => {\n        User.findOne({ id: username }, (err, user) => {\n            if(err) return callback(err);\n\n            // No user found with that username\n            if(!user) return callback(null, false);\n\n            // Make sure the password is correct\n            user.verifyPassword(password, (err, isMatch) => {\n                if(err) return callback(err);\n\n                // Password did not match\n                if(!isMatch) return callback(null, false);\n\n                // Success\n                return callback(null, user);\n            });\n        });\n    }\n));\n\npassport.use('client-basic', new BasicStrategy(\n    (id, secret, callback) => {\n        Client.findOne( { id: id }, (err, client) => {\n            if(err) return callback(err);\n\n            // No client found with that id\n            if(!client) return callback(null, false);\n\n            // Make sure the secret is correct\n            client.verifySecret(secret, (err, isMatch) => {\n                if(err) return callback(err);\n\n                // Password did not match\n                if(!isMatch) return callback(null, false);\n\n                // Success\n                console.log('Client is Authenticated ')\n                return callback(null, client);\n            });\n        });\n    }\n));\n\n\npassport.use(new BearerStrategy(\n    (accessToken, callback) => {\n        Token.findOne({value: accessToken}, (err, token) => {\n            if(err) return callback(err);\n\n            // No token found\n            if(!token) return callback(null, false);\n\n            User.findOne({ _id: token.userId }, (err, user) => {\n                if (err) { return callback(err); }\n\n                // No user found\n                if (!user) { return callback(null, false); }\n\n                // Simple example with no scope\n                callback(null, user, { scope: '*' });\n            });\n        });\n    }\n));\n\nexport class AuthController {\n\n    isAuthenticated: any;\n    isClientAuthenticated: any;\n    isBearerAuthenticated: any;\n\n    constructor() {\n        this.isAuthenticated = passport.authenticate(['basic', 'bearer'], { session: false });\n        this.isClientAuthenticated = passport.authenticate('client-basic', { session: false });\n        this.isBearerAuthenticated = passport.authenticate('bearer', { session: false });\n    }\n\n}\n\n"]}